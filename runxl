#!/bin/bash
# -----------------------------------------------------------------
# runxl - Skript zum komfortablen Starten des atari800 Emulators
# (cdw) 03.12.2010 Stephan Elsner
# -----------------------------------------------------------------
# TODO: 
#   1. Images die in einer Index-Datei vorkommen nicht durch den Dateinamen finden lassen (schwierig)
#   2. Dateinamen die ein single-Quote ' enthalten (kommt bei Rohar-Archiven vor) erzeugen einen fehler im
#      output-script. Das muss noch im filenamen gequotet werden.
#
# History:
# 1.4.2  Language changed to english
# 1.4.1  Bugfix bei -r
# 1.4.0  erlaubt {dir} als Kuerzel in den Emu-Opts der Indexdatei. Wird durch aktuellen Pfad ersetzt
# 1.3.10:Hilfetext angepasst
# 1.3.9: erlaubt {dos} als Shortcut in den Emulator-Optionen der Indexdatei, Fix f端r Atari800 2.2.1
# 1.3.8: Images mit File-Endungen in Grossbuchtaben werden gefunden
# 1.3.7: Erlaubt das Ausblenden von Images ueber die Index-Datei
# 1.3.6: Images, die in einer Index-Datei vorkommen, werden nicht noch  zusaetzlich 
#        durch den Dateinamen gefunden
# 1.3.5: -b und -d Parameter hinzugefuegt
# 1.3.4: Bugfix (Case bei Spielenamen ignorieren)
# 1.3.3: Bugfix (Index-Dateien koennen symlinked sein)
# 1.3.2: Bugfix (Syntax Error)
# 1.3.1: Code cleanup
# 1.3.0: -e Parameter fuer 130XE-Emulation hinzugefuegt
# 1.2.0: unterstuetzt Emulator-Optionen fuer jedes einzelne Programm in den index-Files
# 1.1.0: Unterstuetzt index-Files fuer Multi-File-Disks (z.B.Yogi) mit Loader
# 1.06 : Bugfixes
# 1.05 : Textanpassungen
# 1.04 : Startverhalten geaendert, default jetzt liste + interaktive Auswahl
#        -r parameter hinzugefuegt f端r starten des ersten fundes.
# 1.03 : Bugfix: fehlende quotes in find kommandos
# 1.02 : umbenannt in runxl
# 1.01 : Hilfetext angepasst
# 1.00 : unterstuetzung von cartridge-files rom, bin
# 0.90 : Programmliste wird nach Programmnamen sortiert


# -----------------------------------------------------------------
#  Change tese settings to your own needs:
# -----------------------------------------------------------------

# Base dircetory for atari programs (without slash!)
BASEDIR="/usr/share/atari"

# Fixed start options fuer atari800, dynamic optionen will be added
STARTOPTIONS="-windowed -audio16"

# Path to preferred DOS disk
DOSDISKPATH="/usr/share/atari/XL_Proggies/boots/turbodos.xfd"

# -----------------------------------------------------------------


USAGE=$( cat << EOF
Usage: runxl [-lhosr] [-n number] <program name>
use runxl -h for detailed help
EOF
)

HELP=$( cat << EOF
runxl v.1.4.2 - starts an Atari 8-Bit program or disk image from the commend line
Usage: runxl [-lhosefbd] [-n <number>] <program name>

The program name is used to search in files and index files.
Without further options a list of programs matching the search term is shown and interactively asked for the number of the program to be started.

Options:
-h        This help message
-l        just list matching programs, not ask for number to start
-n <num>  Start Program Nr. <num> from the search result list shown with -l 
-r        Start the first matching program

Emulator otions:
-f        Fullscreen
-o        emulate Atari 400/800
-e        emulate 130XE with 128 KB
-b        Boot with BASIC enabled
-d        Boot to DOS, Program disk is in D2
-s        Show emulator speed in %
EOF
)

# Internal variables:

# MODI (internal use)
# 0 = start of fist program in search result list
# 1 = list programs
# 2 = start specific program
# 3 = list first, then ask for program to start
MODE=3

# atari800 options for the start of specific program types
RUNCMD=""

# atari800 additional options
OPTIONS=""

# used for spectial emulator options for i.e. Yogi-Disks, will be set with the path to the loader 
DISKEMUPTS=""

# Functions:

# --------------------------------------------------------------------------------
# Numeriertes Auflisten aller Dateien in denen $GAMENAME vorkommt 
listprogs()
{
   createlist
   if [ "$NUMFINDS" -gt "0" ]; then
       echo
       echo "   Nr.  Name"
       echo "--------------------------------------------------------------"

       # Namen herausklauben, numerieren, anzeigen
       cat /tmp/atarilist | cut -d '|' -f 2 | nl
       echo
       rm /tmp/atarilist
   else
       echo "Kein Programm gefunden."
   fi
}

# --------------------------------------------------------------------------------
# Erstelle eine temporaere Liste der gesuchten Programme in /tmp/atarilist
# und ermittle Anzahl der Eintraege (in $NUMFINDS)
# Aufbau der Liste:
# Pfad zum disk-image oder atari-executable|Angezeigter Name|Zusaetzliche Emulator-Optionen
createlist()
{
   # Suche files nach Dateinamen und schreibe die Funde in die Datei flist
   find $BASEDIR -iname "*$GAMENAME*" -type f | grep "[axcbeAXCBE][teafioxTEAFIOX][rxsdnmeRXSDNME]$" | awk -F"/" '
      {
         printf("%s|%s|\n",$0,$NF) 
      }' > /tmp/flist

   # Suche in runxmlindex*.text und haenge die Funde an die Ergebnisliste an
   # Die erste Zeile von runxmlindex enthaelt den Namen der Disk
   # Die zweite Zeile die Zusatzoptionen zum Starten des Emulators die fuer alle indizierten Files gelten. 
   # Bei den Yogi-Disks ist es das Yogiloader-Image
   # Eine Index-Zeile ist folgendermassen aufgebaut:
   # Dateiname Disk-Image (ohne Pfad)|Angezeigter Name des Spiels|Emulator-optionen, sowie {dos} als
   #                                                              Platzhalter f端r DOS-Disk 
   # (z.b. wenn das Spiel nicht auf einem XL laeuft, oder ein DOS gebootet werden muss)
   # Ist der angezeigte Name  - wird das file ausgeblendet, parktisch z.b. bei Multi-Disk Spielen
   find -L $BASEDIR -iname "runxlindex*.txt" -type f -exec awk -F"|" '
      function basename(path) {
         n=split(path,a,"/")
         return a[n]
      }

      function dirname(path) {
         if (sub(/\/[^\/]*$/, "", path))
            return path
         else
            return "."
      }

      BEGIN { 
         IGNORECASE = 1;
      }

      {
         # Erste Zeile der Indexdatei auswerten (Name der Sammlung)
         if (NR == 1) {
            # Titel der Disk(s) die durch die aktuelle Datei indiziert sind
            diskname=$0;

            # Pfad zur Indexdatei ermitteln, ist geleichzeitig Pfad zu den indizierten Disks
            mindex = match(FILENAME, "^.*/");
            filepath = substr(FILENAME,1,RLENGTH);
         }

         # Zweite Zeile der Indexdatei (Emulatoroptionen f端r alle files dieser Sammlung)
         if (NR == 2) {
            diskopts=$0
            gsub("{dos}","'$DOSDISKPATH'", diskopts);
         }
      }
      # Wenn der Spielename in der Beschreibung gefunden
      tolower($2) ~ /'$GAMENAME'/ {
         if (NR > 2) {
            gsub(/[ \t]+$/, "", $2);
            # Kuerzel aufloesen
            gsub("{dos}","'$DOSDISKPATH'", $3);
            gsub("{dir}",dirname(filepath $1) "/", $3);
            printf("%s%s|%s (%s)|%s %s\n",filepath,$1,$2,diskname,$3,diskopts);
         }
      }
      # enthaelt die zweite spalte ein Minuszeichen, wird die Zeile zum 
      # spaeteren Entfernen markiert.
      $2 ~ "-" {
         printf("%s%s|**delete**|\n",filepath,$1);
      }
   ' {} \; > /tmp/ilist

   # Filtern der Suchergebnisse nach Dateinamen. Es werden nur die Ergebnisse beruecksichtigt, die
   # nicht schon durch die Suche in den Indexdateien gefunden wurden
   awk -F"|" '
      BEGIN {
         while ((getline < "/tmp/ilist") > 0)
            myarray[$1] = $1
      }
      {
         if (!($1 in myarray))
            printf("%s\n",$0)
      }' /tmp/flist > /tmp/llist

   # Die mit delete gekennzeichneten Zeilen herausfiltern
   cat /tmp/llist /tmp/ilist | grep -v '**delete**' > /tmp/alist

   # Ergebnisliste alphabetisch sortieren
   sort -t '|' -k2 /tmp/alist > /tmp/atarilist
   NUMFINDS=$(cat /tmp/atarilist | wc -l)
   rm /tmp/alist
   rm /tmp/ilist
   rm /tmp/flist
   rm /tmp/llist
}

# --------------------------------------------------------------------------------
# Auswaehlen des Atari-Programmes Nr. $GAMENUMBER aus der Liste der auf $GAMENAME
# passenden files. Vollstaendiger Pfad befindet sich in $AFILE
findprog()
{
   createlist
   if ([ "$GAMENUMBER" -le "$NUMFINDS" ] && [ "$GAMENUMBER" -ge "1" ]) then 
      # Pfad lesen
      AFILE=$(cat /tmp/atarilist | head -$GAMENUMBER | tail -1 | cut -d '|' -f1)

      # lesen der zusatzoptionen, bei normalen programmen leer, bei yogi-disks pfad zum loader
      DISKEMUOPTS=$(cat /tmp/atarilist | head -$GAMENUMBER | tail -1 | cut -d '|' -f3)
   else
      echo "Programmnummer muss zwischen 1 und $NUMFINDS liegen."
      exit
   fi
   rm /tmp/atarilist
}

# --------------------------------------------------------------------------------

if [ $# -lt 1 ]; then
   echo "$USAGE"
   exit 1
fi

# Gamename ist immer letztes Argument, in variable ueberfuehren
GNAME=${@: -1}
# in lowercase wandeln
GAMENAME=${GNAME,,}

if [ ${GAMENAME:0:1} == "-" -a $GAMENAME != "-h"  ]; then
   echo "$USAGE"
   exit 1
fi

# Parameter auswerten
while getopts n:lhosrefbd OPT; do
  case $OPT in
     l)
        # programme auflisten
        if [ $# -lt 2 ]; then
           echo "$USAGE"
           exit 1
        fi
        MODE=1
        ;;
     r) # erstes der gefundenen Programme starten
        MODE=2
        GAMENUMER=1
        ;;
     n)
        # Bestimmtes programm aus der Liste starten
        MODE=2
        GAMENUMBER=$OPTARG
        ;;
     h)
        # Help
        echo "$HELP"
        exit
        ;;
     o)
        # o = old Atari 400/800
        OPTIONS="$OPTIONS -b"
        ;;
     e)
        # e = Atari 130 XE
        OPTIONS="$OPTIONS -xe"
        ;;
     s)
        # s = show speed
        OPTIONS="$OPTIONS -showspeed"
        ;;
     f)
        # f = fullscreen
        OPTIONS="$OPTIONS -fullscreen"
        ;;
     b)
        # b = basic
        OPTIONS="$OPTIONS -basic"
        ;;
     d)
        # d = DOS
        OPTIONS="$OPTIONS $DOSDISKPATH"
        ;;
     \?)
        #echo "Falscher Parameter: -$OPT" >&2
        exit 1
        ;;
  esac
done

case $MODE in
   0) # -r suchen und starten des ersten passenden Programmes
      # findfirstprog
      ;;
   1) # -l Auflisten der gefundenen programme
      listprogs
      exit
      ;;
   2) # -n starten eines bestimmten programmes aus der liste
      findprog
      ;;
   3) # ohne parameter: Auflisten der Programme aund Abfragen welches davon gestartet werden soll
      listprogs
      # Interaktives Abfragen der Spielenummer
      if [ "$NUMFINDS" -eq 0 ];
      then
	 exit
      fi
      echo "Welches Programm starten? [1-$NUMFINDS]"
      read GAMENUMBER

      # Test ob eingabe numerisch ist, ansonsten Scriptende
      if [[ $GAMENUMBER =~ ^[0-9]+$ ]]; then
         findprog
      else
         exit
      fi
      ;;
esac

# Pfad zum Programm ist ermittelt, starten
if [ "$AFILE" != "" ];
then
   EXTENSION="`echo ${AFILE: -3}|tr '[:upper:]' '[:lower:]'`"
   case $EXTENSION in
      xex|com|exe)
         RUNCMD="-run"
         ;;
      atr|xfd)
         RUNCMD=""
         ;;
      bas|lst)
         RUNCMD="-basic -run"
         ;;
      cas)
         RUNCMD="-boottape"
         ;;
      rom|bin)
         RUNCMD="-cart"
         ;;
      *)
         echo "Unbekannter Dateityp: $EXTENSION"
         exit
         ;;
   esac
else
   echo "$GAMENAME nicht gefunden."
   exit
fi

if [ "$MODE" -eq "0" -o "$MODE" -eq "2" ]; then
  echo  \"`basename "$AFILE"`\" "  starten? [J/n]"
  read TASTE
fi

if [ "$TASTE" == "n" ]; then
   echo "dann eben nicht."
else
  # Erzeugen und ausfuehren des Startscriptes
  echo  "atari800 $STARTOPTIONS $OPTIONS $DISKEMUOPTS $RUNCMD '$AFILE'" > /tmp/atariscript
  chmod +x /tmp/atariscript
  /tmp/atariscript
  #rm /tmp/atariscript
fi
exit

